services:
  nginx:
    container_name: ${COMPOSE_PROJECT_NAME}_nginx
    image: nginx:1.27.0-alpine3.19
    environment:
      DOMAIN_NAME: '${DOMAIN_NAME}'
    ports:
      - '${NGINX_HTTP_PORT}:80'
      - '${NGINX_HTTPS_PORT}:443'
    volumes:
      - type: bind
        source: ./docker/nginx/templates
        target: /etc/nginx/templates
      - type: bind
        source: ./docker/nginx/certs
        target: /etc/nginx/certs
      - type: bind
        source: ./src
        target: /var/www/src
    working_dir: /var/www/src
    networks:
      - backend-network
  php:
    container_name: ${COMPOSE_PROJECT_NAME}_php
    build:
      context: ./docker/php
    image: ${COMPOSE_PROJECT_NAME}_php
    environment:
      PHP_XDEBUG_ENABLE: ${PHP_XDEBUG_ENABLE}
      PHP_IDE_CONFIG: 'serverName=${IDE_CONFIG_SERVER_NAME}'
      DB_USER: '${POSTGRES_USER}'
      DB_PASSWORD: '${POSTGRES_PASSWORD}'
      DB_NAME: '${POSTGRES_DB}'
    volumes:
      - type: bind
        source: ./src
        target: /var/www/src
    working_dir: /var/www/src
    networks:
      - backend-network
  postgres:
    container_name: ${COMPOSE_PROJECT_NAME}_postgres
    image: postgres:16.3-alpine3.20
    environment:
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_DB: '${POSTGRES_DB}'
    ports:
      - '${POSTGRES_PORT}:5432'
    volumes:
      - type: volume
        source: postgres-data
        target: /var/lib/postgresql/data
    networks:
      - backend-network

volumes:
  postgres-data:
    driver: local

networks:
  backend-network:
    driver: bridge